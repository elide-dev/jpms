name: 'Build & Test'

'on':
  workflow_call:
    inputs:
      tests:
        description: 'Run all tests'
        type: boolean
        default: false
    secrets:
      CODECOV_TOKEN:
        description: 'Codecov Token'
        required: false
      BUILDBUDDY_APIKEY:
        description: 'BuildBuddy API Key'
        required: false

  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    name: 'Build Repository'
    runs-on: ubuntu-latest
    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - name: 'Setup: Checkout'
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
          submodules: true
      - name: 'Setup: Java 21'
        uses: actions/setup-java@2dfa2011c5b2a0f1489bf9e433881c92c1631f88 # v4.3.0
        with:
          java-version: '21'
          distribution: 'zulu'
      - name: 'Setup: Node'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION || '21' }}
      - name: 'Setup: Bun'
        uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 # v1.2.2
        with:
          bun-version: latest
      - name: 'Setup: PNPM'
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ vars.PNPM_VERSION || '10' }}
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: 'Setup: Bazelisk'
        uses: bazelbuild/setup-bazelisk@b39c379c82683a5f25d34f0d062761f62693e0b2 # v3.0.0
      - name: 'Setup: Cache'
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            jdk
            annotation-tools
            .m2
            ~/.cache/bazel
          key: jpms-attic-v1-${{ runner.os }}
      - name: 'Setup: BuildBuddy'
        run: echo "build --remote_header=x-buildbuddy-api-key=$BUILDBUDDY_KEY" >> ./.github/bazel.rc
        env:
          BUILDBUDDY_KEY: ${{ secrets.BUILDBUDDY_APIKEY }}
      - name: 'Setup: Bazel Configuration'
        run: cp -fv ./.github/bazel.rc ./tools/bazel.rc
      - name: 'Build & Test Repository'
        run: make TESTS=${{ inputs.tests && 'yes' || 'no' }} SIGNING=no JAVADOC=no SNAPSHOT=yes
      - name: 'Reporting: Code Coverage'
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: elide-dev/jpms
          flags: packages
          verbose: true
      - name: 'Build: Packages'
        run: pnpm run -r pack
      - name: 'Artifact: Packages'
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: javamodules-npm-${{ github.sha }}
          retention-days: 7
          compression-level: 1
          overwrite: true
          path: |
            packages/*/*.tgz
