name: 'Publish: Package'

on:
  workflow_call:
    inputs:
      package:
        description: 'Package'
        type: string
        required: true
      registry:
        description: 'Registry'
        type: string
        default: 'https://registry.npmjs.org'
      dry-run:
        description: 'Dry Run'
        type: boolean
        default: false
      release:
        description: 'Release to GitHub'
        type: boolean
        default: false
      tag:
        description: 'Release: Tag'
        type: string
      draft:
        description: 'Release: Draft'
        type: boolean
      prerelease:
        description: 'Release: Pre-release'
        type: boolean
      release-generate:
        description: 'Release: Generate Notes'
        type: boolean
      release-latest:
        description: 'Release: Latest'
        type: boolean

    secrets:
      PUBLISH_TOKEN:
        description: 'Publishing Token'
        required: true

  workflow_dispatch:
    inputs:
      package:
        description: 'Package'
        type: choice
        required: true
        options:
          - java
          - maven
          - gradle
          - indexer
      dry-run:
        description: 'Dry Run'
        type: boolean
        default: false
      registry:
        description: 'Registry'
        type: string
        default: 'https://registry.npmjs.org'
      release:
        description: 'Release to GitHub'
        type: boolean
        default: false
      tag:
        description: 'Release Tag'
        type: string
      draft:
        description: 'Release: Draft'
        type: boolean
      prerelease:
        description: 'Release: Pre-release'
        type: boolean
      release-generate:
        description: 'Release: Generate Notes'
        type: boolean
      release-latest:
        description: 'Release: Latest'
        type: boolean

jobs:
  build:
    name: 'Package: Build (${{ inputs.package }})'
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - name: 'Setup: Checkout'
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: 'Setup: Node'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION || '21' }}
          registry-url: 'https://registry.npmjs.org'
      - name: 'Setup: PNPM'
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ vars.PNPM_VERSION || '10' }}
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: 'Build: Package (${{ inputs.package }})'
        run: pnpm run build && cd packages/${{ inputs.package }} && pnpm pack
      - name: 'Build: Provenance Hashes'
        shell: bash
        id: hash
        run: |
          echo "Release assets:"
          ls -la packages/*/*.tgz
          file packages/*/*.tgz
          du -h packages/*/*.tgz
          echo ""

          sha256sum packages/*/*.tgz > ./packages/${{ inputs.package }}/pkg-hashes.txt
          echo "Hashes:"
          cat ./packages/${{ inputs.package }}/pkg-hashes.txt
          echo ""

          cat ./packages/${{ inputs.package }}/pkg-hashes.txt | base64 -w0 > ./packages/${{ inputs.package }}/pkg-hashes-encoded.txt
          echo "Encoded Hashes:"
          cat ./packages/${{ inputs.package }}/pkg-hashes-encoded.txt
          echo ""

          echo "hashes=$(cat ./packages/${{ inputs.package }}/pkg-hashes-encoded.txt)" >> "$GITHUB_OUTPUT"
      - name: 'Artifact: Packages'
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: javamodules-pkg-${{ inputs.package }}-${{ github.sha }}
          retention-days: 30
          compression-level: 1
          overwrite: true
          path: |
            packages/${{ inputs.package }}/*.tgz
            packages/${{ inputs.package }}/pkg-hashes.txt
            packages/${{ inputs.package }}/pkg-hashes-encoded.txt

  provenance:
    name: 'SLSA Provenance (${{ inputs.package }})'
    needs: [build]
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    permissions:
      actions: read
      id-token: write
      contents: write
    with:
      base64-subjects: '${{ needs.build.outputs.hashes }}'
      upload-assets: ${{ inputs.dry-run != true }}
      upload-tag-name: ${{ inputs.tag || github.ref }}
      draft-release: ${{ inputs.draft }}

  release:
    name: 'Release to GitHub (${{ inputs.package }})'
    needs: [build, provenance]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || inputs.release
    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - name: 'Artifact: Package'
        id: releaseArtifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: javamodules-pkg-${{ inputs.package }}-${{ github.sha }}
      - name: 'Publish: Release'
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          name: ${{ inputs.tag || github.ref }}
          tag_name: ${{ inputs.tag || github.ref }}
          generate_release_notes: ${{ inputs.release-generate }}
          append_body: true
          files: |
            javamodules-${{ inputs.package }}-${{ inputs.tag || github.ref }}.tgz

  publish-npm:
    name: 'Publish to Registry (${{ inputs.package }})'
    needs: [build, provenance, release]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || inputs.release
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - name: 'Setup: Harden Runner'
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - name: 'Setup: Checkout'
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: 'Setup: Node'
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ vars.NODE_VERSION || '21' }}
          registry-url: 'https://registry.npmjs.org'
      - name: 'Setup: PNPM'
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: ${{ vars.PNPM_VERSION || '10' }}
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
      - name: 'Build: All Packages'
        run: pnpm run build
      - name: 'Publish to Registry'
        # prettier-ignore
        run: cd packages/${{ inputs.package }} && npm publish ${{ inputs.dry-run && '--dry-run' || '' }} --registry=${{ inputs.registry }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
